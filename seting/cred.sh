#!/bin/bash

SSH_KEY_PATH="/root/.ssh/id_ed25519"
GITHUB_EMAIL="sashamankovsky2019@gmail.com"
CREDENTIAL_ID="ssh-key-jenkins"
GROOVY_SCRIPT_PATH="/var/lib/jenkins/init.groovy.d/add-ssh-credentials.groovy"
<<<<<<< HEAD
GITHUB_USERNAME="YourGitHubUsername"
GITHUB_TOKEN="YourGitHubToken"
=======
GITHUB_USERNAME="RootSasha"
GITHUB_TOKEN="you_token"
>>>>>>> c716eef (Initial commit)

# üõ† –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ —ñ—Å–Ω—É—é—Ç—å SSH-–∫–ª—é—á—ñ
if [[ -f "$SSH_KEY_PATH" && -f "$SSH_KEY_PATH.pub" ]]; then
    echo "‚úÖ SSH-–∫–ª—é—á –≤–∂–µ —ñ—Å–Ω—É—î! –û—Å—å –≤–∞—à –ø—É–±–ª—ñ—á–Ω–∏–π –∫–ª—é—á:"
    cat "$SSH_KEY_PATH.pub"
else
    echo "üîë –ì–µ–Ω–µ—Ä—É—î–º–æ –Ω–æ–≤–∏–π SSH-–∫–ª—é—á..."
    ssh-keygen -t ed25519 -f "$SSH_KEY_PATH" -C "$GITHUB_EMAIL" -N "" -q
    echo "‚úÖ –ù–æ–≤–∏–π SSH-–∫–ª—é—á —Å—Ç–≤–æ—Ä–µ–Ω–æ!"
fi

# –ß–∏—Ç–∞—î–º–æ –ø—Ä–∏–≤–∞—Ç–Ω–∏–π —Ç–∞ –ø—É–±–ª—ñ—á–Ω–∏–π –∫–ª—é—á
SSH_PRIVATE_KEY=$(cat "$SSH_KEY_PATH")
SSH_PUBLIC_KEY=$(cat "$SSH_KEY_PATH.pub")

# üìå –ó–∞–ø–∏—Å—É—î–º–æ SSH-–∫–ª—é—á —É —Ñ–∞–π–ª –¥–ª—è –ø–æ–¥–∞–ª—å—à–æ–≥–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è
PRIVATE_KEY_FILE="/root/jenkins_ssh_key.txt"
echo "$SSH_PRIVATE_KEY" | sudo tee "$PRIVATE_KEY_FILE" > /dev/null
sudo chmod 600 "$PRIVATE_KEY_FILE"

# üõ† –î–æ–¥–∞—î–º–æ –∫–ª—é—á –Ω–∞ GitHub
GITHUB_API_URL="https://api.github.com/user/keys"
KEY_TITLE="Jenkins_AutoKey"

EXISTING_KEYS=$(curl -s -u "$GITHUB_USERNAME:$GITHUB_TOKEN" "$GITHUB_API_URL" | jq -r '.[].key')
if echo "$EXISTING_KEYS" | grep -q "$SSH_PUBLIC_KEY"; then
    echo "‚úÖ SSH-–∫–ª—é—á –≤–∂–µ —î –Ω–∞ GitHub!"
else
    echo "üîó –î–æ–¥–∞—î–º–æ SSH-–∫–ª—é—á –Ω–∞ GitHub..."
    curl -s -u "$GITHUB_USERNAME:$GITHUB_TOKEN" -X POST -H "Content-Type: application/json" \
         -d "{\"title\": \"$KEY_TITLE\", \"key\": \"$SSH_PUBLIC_KEY\"}" "$GITHUB_API_URL"
    echo "‚úÖ SSH-–∫–ª—é—á —É—Å–ø—ñ—à–Ω–æ –¥–æ–¥–∞–Ω–æ –Ω–∞ GitHub!"
fi

# üìå –ó–∞–ø–∏—Å—É—î–º–æ Groovy-—Å–∫—Ä–∏–ø—Ç —É —Ñ–∞–π–ª
cat <<EOF | sudo tee "$GROOVY_SCRIPT_PATH" > /dev/null
import jenkins.model.*
import com.cloudbees.plugins.credentials.*
import com.cloudbees.plugins.credentials.domains.*
import com.cloudbees.plugins.credentials.impl.*
import com.cloudbees.jenkins.plugins.sshcredentials.impl.*

def instance = Jenkins.instance
if (instance == null) {
    return
}

def credentialsStore = instance.getExtensionList('com.cloudbees.plugins.credentials.SystemCredentialsProvider')[0].getStore()
def credentialId = "$CREDENTIAL_ID"
def existingCred = credentialsStore.getCredentials(Domain.global()).find { it.id == credentialId }
if (existingCred) {
    credentialsStore.removeCredentials(Domain.global(), existingCred)
}

def sshKey = new BasicSSHUserPrivateKey(
    CredentialsScope.GLOBAL,
    credentialId,
    "jenkins",
    new BasicSSHUserPrivateKey.DirectEntryPrivateKeySource("""$SSH_PRIVATE_KEY"""),
    "",
    "–ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ —Å—Ç–≤–æ—Ä–µ–Ω—ñ Global SSH credentials"
)

credentialsStore.addCredentials(Domain.global(), sshKey)
instance.save()
EOF

echo "‚úÖ Groovy-—Å–∫—Ä–∏–ø—Ç –¥–ª—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è SSH-–∫–ª—é—á–∞ —Å—Ç–≤–æ—Ä–µ–Ω–æ!"

# –î–æ–¥–∞—î–º–æ GitHub –¥–æ known_hosts
sudo -u jenkins mkdir -p /var/lib/jenkins/.ssh
sudo chmod 700 /var/lib/jenkins/.ssh
sudo chown -R jenkins:jenkins /var/lib/jenkins/.ssh
sudo -u jenkins ssh-keyscan -H github.com | sudo tee /var/lib/jenkins/.ssh/known_hosts > /dev/null
sudo chmod 600 /var/lib/jenkins/.ssh/known_hosts
sudo chown jenkins:jenkins /var/lib/jenkins/.ssh/known_hosts

# –î–æ–∑–≤–æ–ª—è—î–º–æ jenkins –≤–∏–∫–æ–Ω—É–≤–∞—Ç–∏ sudo –±–µ–∑ –ø–∞—Ä–æ–ª—è
sudo grep -q "^jenkins ALL=(ALL) NOPASSWD: ALL" /etc/sudoers || sudo sed -i '1s|^|jenkins ALL=(ALL) NOPASSWD: ALL\n|' /etc/sudoers

# –î–æ–¥–∞—î–º–æ jenkins –¥–æ –≥—Ä—É–ø–∏ docker
sudo usermod -aG docker jenkins

echo "üöÄ –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
